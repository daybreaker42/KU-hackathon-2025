물론이죠! 아래는 연리지 API 문서를 기반으로 정리한 **Markdown 형식의 API Endpoint 문서**입니다. 각 섹션은 기능별로 나누었고, 요청 방식과 경로를 명확히 표기했습니다.

---

# 🌿 Yeonriji API Documentation

## external

POST  /external-api/complete-plant-identification   # Plant.ID로 식물을 식별하고, Gemini로 한국어 번역 및 관리 정보를 가져옵니다.
req ex:
{"imageUrl":"https://ku-hackathon.s3.ap-southeast-2.amazonaws.com/plant/451f9dff-8b51-4a9e-91c1-81fb3fd46f73-ad9faa6729711b023d6b31b154e01d0aa1e09.jpeg"}

res ex:
{
  "name": "Allium lusitanicum",
  "koreanName": "두메부추\n",
  "probability": 0.9389,
  "careInfo": {
    "wateringCycle": "7",
    "sunlightNeeds": "간접광선",
    "careInstructions": "일반적인 식물 관리 방법을 따라주세요."
  }
}

## 🔐 Authentication
```http
POST /auth/signup         # 회원가입
POST /auth/login          # 로그인
req body:
{
  "email": "user@example.com",
  "password": "password123"
} 
response example:
{
  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InVzZXJAZXhhbXBsZS5jb20iLCJzdWIiOjEsImlhdCI6MTc1NjQwNTU3MywiZXhwIjoxNzU2NDkxOTczfQ.0jgOpk1wKKwJ1v5BrVE1DamTXzjxmxHnj6lgpUb9rS8",
  "user": {
    "id": 1,
    "name": "김민준",
    "email": "user@example.com"
  }
}
```

## 🏠 Home
```http
GET /home/my-plants       # 내 식물 리스트 가져오기
res:
[
  {
    "id": 1,
    "name": "몬스테라",
    "variety": "몬스테라 델리시오사",
    "img_url": "https://example.com/plant1.jpg",
    "status": "good",
    "daysUntilWatering": 3,
    "lastWatered": "2025-08-25T10:00:00Z",
    "wateringCycle": "7days",
    "sunlightNeeds": "간접광선",
    "recentEmotion": "행복"
  }
]
GET /home/today-tasks     # 오늘 할 일 가져오기
GET /home/weekly-diaries  # 주간 일기 작성 현황
GET /home/diaries/{date}  # 특정 날짜 일기 내용 가져오기
GET /home/friend-feeds    # 친구 반응 가져오기
```

## 🌱 Plants
```http
POST /plants/image        # 식물 이미지 업로드
req body: formdata, key: file
res ex:
{
  "imageUrl": "https://s3.amazonaws.com/bucket/plants/uuid-filename.jpg"
}
POST /plants              # 식물 등록
req body:
{
  "name": "몬스테라",
  "variety": "몬스테라 델리시오사",
  "img_url": "https://example.com/plant1.jpg",
  "cycle_type": "WEEKLY",
  "cycle_value": "7",
  "cycle_unit": "일",
  "sunlight_needs": "간접광선",
  "purchase_date": "2025-08-20T00:00:00Z",
  "purchase_location": "화원",
  "memo": "첫 번째 식물"
}
res ex:
{
  "id": 1,
  "name": "몬스테라",
  "variety": "몬스테라 델리시오사",
  "img_url": "https://example.com/plant1.jpg",
  "cycle_type": "WEEKLY",
  "cycle_value": "7",
  "cycle_unit": "일",
  "sunlight_needs": "간접광선",
  "purchase_date": "2025-08-20T00:00:00Z",
  "purchase_location": "화원",
  "memo": "첫 번째 식물",
  "author": {},
  "createdAt": "2025-08-28T10:00:00Z",
  "updatedAt": "2025-08-28T10:00:00Z"
}
GET /plants               # 내 식물 목록 조회
GET /plants/{id}          # 특정 식물 조회
res ex:
{
  "id": 2,
  "name": "세베",
  "variety": "산세베리아",
  "img_url": "https://i.ytimg.com/vi/LOPw_hgNtP4/mqdefault.jpg",
  "cycle_type": "BIWEEKLY",
  "cycle_value": "14",
  "cycle_unit": "days",
  "sunlight_needs": "직사광선",
  "purchase_date": "2024-02-20T00:00:00.000Z",
  "purchase_location": "꽃집",
  "memo": "공기정화 식물",
  "author": {
    "id": 1,
    "name": "김민준"
  },
  "createdAt": "2025-08-28T14:10:06.250Z",
  "updatedAt": "2025-08-28T16:03:57.854Z"
}
PATCH /plants/{id}        # 식물 정보 수정
DELETE /plants/{id}       # 식물 삭제

res ex:
Code	Description	Links
200	
식물 삭제 성공

No links
403	
삭제 권한 없음

No links
404	
식물을 찾을 수 없음

```

## 🧑‍🤝‍🧑 Community
```http
POST /community/image                     # 커뮤니티 이미지 업로드

GET /community                            # 게시글 목록 조회
GET /community/{id}                       # 특정 게시글 조회
POST /community/posts                     # 게시글 작성
PATCH /community/posts/{id}              # 게시글 수정
DELETE /community/posts/{id}             # 게시글 삭제
POST /community/posts/{id}/like          # 게시글 좋아요/취소
필요 인자: path variable id only
response:
{
  "isLiked": true,
  "likesCount": 15
}
GET /community/posts/{id}/comments       # 게시글 댓글 목록 조회
query params:
id *
number
(path)
게시글 ID

page
number
(query)
페이지 번호

limit
number
(query)
페이지당 항목 수

response example:
{
  "comments": [
    {
      "id": 1,
      "content": "몬스테라 정말 예쁘게 키우시네요!",
      "author": {
        "id": 1,
        "name": "김민준"
      },
      "createdAt": "2025-08-28T14:10:06.320Z",
      "updatedAt": "2025-08-28T14:10:06.320Z",
      "parent_id": null,
      "replies": []
    },
    {
      "id": 2,
      "content": "저도 몬스테라 키우고 싶어졌어요",
      "author": {
        "id": 1,
        "name": "김민준"
      },
      "createdAt": "2025-08-28T14:10:06.320Z",
      "updatedAt": "2025-08-28T14:10:06.320Z",
      "parent_id": null,
      "replies": []
    }
  ],
  "total": 2,
  "page": 1,
  "limit": 10,
  "totalPages": 1
}

POST /community/posts/{id}/comments      # 댓글 작성
request body:
{
  "content": "정말 유용한 정보네요! 감사합니다.",
  "parent_id": 1
}
response example:
{
  "id": 1,
  "content": "정말 유용한 정보네요!",
  "author": {},
  "createdAt": "2025-08-28T10:00:00Z",
  "updatedAt": "2025-08-28T10:00:00Z",
  "parent_id": null,
  "replies": [
    "string"
  ]
}
PATCH /community/comments/{id}           # 댓글 수정
request body:
{
  "content": "수정된 댓글 내용입니다."
}
response example:
{
  "id": 1,
  "content": "정말 유용한 정보네요!",
  "author": {},
  "createdAt": "2025-08-28T10:00:00Z",
  "updatedAt": "2025-08-28T10:00:00Z",
  "parent_id": null,
  "replies": [
    "string"
  ]
}

DELETE /community/comments/{id}          # 댓글 삭제
Code	Description	Links
200	
댓글 삭제 성공

No links
403	
삭제 권한 없음

No links
404	
댓글을 찾을 수 없음


```

## 📔 Diary
```http
GET /diaries/memory                       # 중요한 성장일기 조회
req:
res:
[
  {
    "id": 1,
    "title": "몬이의 첫 새잎",
    "content": "오늘 몬이에게 새로운 잎이 나왔어요! 정말 신기하고 기뻐요. 매일 물을 주고 관찰한 보람이 있네요.",
    "water": false,
    "sun": false,
    "emotion": "happy",
    "memory": "첫 새잎의 감동",
    "author": {
      "id": 1,
      "name": "김철수"
    },
    "createdAt": "2025-08-28T14:10:06.306Z",
    "updatedAt": "2025-08-28T20:46:39.024Z",
    "images": [
      "https://i.ytimg.com/vi/LOPw_hgNtP4/mqdefault.jpg"
    ],
    "comments_count": 1
  },
  {
    "id": 2,
    "title": "세베의 성장 기록",
    "content": "산세베리아 세베가 한층 더 커진 것 같아요. 잎이 더 두꺼워지고 색깔도 진해졌어요.",
    "water": false,
    "sun": false,
    "emotion": "satisfied",
    "memory": "꾸준한 성장의 기쁨",
    "author": {
      "id": 1,
      "name": "김철수"
    },
    "createdAt": "2025-08-27T14:10:06.306Z",
    "updatedAt": "2025-08-28T20:46:39.024Z",
    "images": [
      "https://i.ytimg.com/vi/LOPw_hgNtP4/mqdefault.jpg"
    ],
    "comments_count": 1
  },
  {
    "id": 3,
    "title": "스킨이 물주기",
    "content": "스킨답서스는 물을 좋아하는 것 같아요. 며칠 전에 물을 줬는데 벌써 흙이 말랐네요.",
    "water": false,
    "sun": false,
    "emotion": "normal",
    "memory": "물주기 패턴 파악",
    "author": {
      "id": 1,
      "name": "김철수"
    },
    "createdAt": "2025-08-22T14:10:06.306Z",
    "updatedAt": "2025-08-28T20:46:39.024Z",
    "images": [
      "https://i.ytimg.com/vi/LOPw_hgNtP4/mqdefault.jpg"
    ],
    "comments_count": 0
  },
  {
    "id": 4,
    "title": "오늘의 식물 관찰",
    "content": "모든 식물들이 건강해 보여요. 특히 몬이는 잎이 더 커진 것 같고, 세베는 새로운 촉이 나올 것 같아요.",
    "water": false,
    "sun": false,
    "emotion": "happy",
    "memory": "전체적인 건강 체크",
    "author": {
      "id": 1,
      "name": "김철수"
    },
    "createdAt": "2025-08-20T14:10:06.306Z",
    "updatedAt": "2025-08-28T20:46:39.024Z",
    "images": [
      "https://i.ytimg.com/vi/LOPw_hgNtP4/mqdefault.jpg"
    ],
    "comments_count": 0
  }
]
POST /diary                               # 일기 작성
GET /diary/{date}                         # 특정 날짜 일기 조회
PATCH /diary/{id}                         # 일기 수정
DELETE /diary/{id}                        # 일기 삭제
GET /diaries/{id}/comments                # 일기 댓글 목록 조회
req:
Name	Description
id *
number
(path)
일기 ID

1
page
number
(query)
페이지 번호

1
limit
number
(query)
페이지당 항목 수

10

res:
{
  "comments": [
    {
      "id": 1,
      "content": "정말 아름다운 일기네요!",
      "author": {},
      "createdAt": "2025-08-28T10:00:00Z",
      "updatedAt": "2025-08-28T10:00:00Z",
      "parent_id": null,
      "replies": [
        null
      ]
    }
  ],
  "total": 15,
  "page": 1,
  "limit": 10,
  "totalPages": 2
}

POST /diary/{id}/comments                 # 일기 댓글 작성
req:
{
  "content": "정말 아름다운 일기네요!",
  "parent_id": 1
}
res:
{
  "id": 1,
  "content": "정말 아름다운 일기네요!",
  "author": {},
  "createdAt": "2025-08-28T10:00:00Z",
  "updatedAt": "2025-08-28T10:00:00Z",
  "parent_id": null,
  "replies": [
    null
  ]
}
error - 404 : 일기를 찾을 수 없음
PATCH /diary/comments/{id}               # 일기 댓글 수정
req:
{
  "content": "수정된 댓글 내용입니다."
}
res:
Responses
Code	Description	Links
200	
댓글 수정 성공

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "id": 1,
  "content": "정말 아름다운 일기네요!",
  "author": {},
  "createdAt": "2025-08-28T10:00:00Z",
  "updatedAt": "2025-08-28T10:00:00Z",
  "parent_id": null,
  "replies": [
    null
  ]
}
No links
403	
수정 권한 없음

No links
404	
댓글을 찾을 수 없음

DELETE /diary/comments/{id}              # 일기 댓글 삭제
req: id - diary id: number
res:
Code	Description	Links
200	
댓글 삭제 성공

No links
403	
삭제 권한 없음

No links
404	
댓글을 찾을 수 없음


```

## 🧑‍🤝‍🧑 Friends
```http
GET /friends/search                       # 사용자 검색
Parameters
Try it out
Name	Description
search *
string
(query)
검색할 사용자 이름 또는 이메일

john
Responses
Code	Description	Links
200	
사용자 검색 성공

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "users": [
    {
      "id": 0,
      "name": "string",
      "email": "string",
      "profile_img": "string"
    }
  ],
  "total": 0,
  "page": 0,
  "limit": 0,
  "totalPages": 0
}
POST /friends/request                     # 친구 요청 보내기
Parameters
Try it out
No parameters

Request body

application/json
Example Value
Schema
{
  "friend_id": 2
}
Responses
Code	Description	Links
201	
친구 요청 전송 성공

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "message": "친구 요청을 보냈습니다."
}
No links
400	
잘못된 요청 (자기 자신에게 요청, 이미 친구, 중복 요청 등)

No links
404	
사용자를 찾을 수 없음
GET /friends/requests                     # 친구 요청 목록 조회
받은 친구 요청과 보낸 친구 요청 목록을 조회합니다.

Parameters
Try it out
No parameters

Responses
Code	Description	Links
200	
친구 요청 목록 조회 성공

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "received": [
    {
      "id": 1,
      "requester": {
        "id": 1,
        "name": "홍길동",
        "profile_img": "https://example.com/profile.jpg"
      },
      "recipient": {
        "id": 1,
        "name": "홍길동",
        "profile_img": "https://example.com/profile.jpg"
      },
      "status": "PENDING",
      "createdAt": "2025-08-28T10:00:00Z"
    }
  ],
  "sent": [
    {
      "id": 1,
      "requester": {
        "id": 1,
        "name": "홍길동",
        "profile_img": "https://example.com/profile.jpg"
      },
      "recipient": {
        "id": 1,
        "name": "홍길동",
        "profile_img": "https://example.com/profile.jpg"
      },
      "status": "PENDING",
      "createdAt": "2025-08-28T10:00:00Z"
    }
  ],
  "totalReceived": 3,
  "totalSent": 2
}
POST /friends/requests/{requestId}/accept # 친구 요청 수락
Parameters
Try it out
Name	Description
requestId *
number
(path)
친구 요청 ID

1
Responses
Code	Description	Links
200	
친구 요청 수락 성공

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "message": "친구 요청을 수락했습니다."
}
No links
400	
수락할 권한이 없거나 이미 처리된 요청

No links
404	
친구 요청을 찾을 수 없음
DELETE /friends/requests/{requestId}/reject # 친구 요청 거절
Parameters
Try it out
Name	Description
requestId *
number
(path)
친구 요청 ID

1
Responses
Code	Description	Links
200	
친구 요청 거절 성공

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "message": "친구 요청을 거절했습니다."
}
No links
400	
거절할 권한이 없거나 이미 처리된 요청

No links
404	
친구 요청을 찾을 수 없음
DELETE /friends/requests/{requestId}/cancel # 친구 요청 취소
Parameters
Try it out
Name	Description
requestId *
number
(path)
친구 요청 ID

1
Responses
Code	Description	Links
200	
친구 요청 취소 성공

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "message": "친구 요청을 취소했습니다."
}
No links
400	
취소할 권한이 없거나 이미 처리된 요청

No links
404	
친구 요청을 찾을 수 없음
GET /friends                              # 친구 목록 조회
Parameters
Try it out
No parameters

Responses
Code	Description	Links
200	
친구 목록 조회 성공

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "friends": [
    {
      "id": 2,
      "name": "김민준",
      "profile_img": "https://example.com/profile.jpg",
      "friendship_date": "2025-08-28T10:00:00Z"
    }
  ],
  "total": 15,
  "page": 1,
  "limit": 10,
  "totalPages": 2
}
DELETE /friends/{friendId}                # 친구 삭제
Parameters
Try it out
Name	Description
friendId *
number
(path)
친구 사용자 ID

2
Responses
Code	Description	Links
200	
친구 삭제 성공

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "message": "친구를 삭제했습니다."
}
No links
404	
친구 관계를 찾을 수 없음
GET /friends/activities                   # 친구들의 최근 활동 조회
```

## 👤 Users
```http
GET /users/{id}                           # 사용자 프로필 조회
GET /users/me/activities                  # 내 활동 조회
res:
Name	Description
page
number
(query)
페이지 번호

1
limit
number
(query)
페이지당 항목 수

10

req:
{
  "activities": [
    {
      "type": "post",
      "id": 42,
      "title": "다들 건강하세요~",
      "content": "다들 건강하세요~",
      "createdAt": "2025-08-28T21:03:41.665Z",
      "likesCount": 0,
      "commentsCount": 0
    },
    {
      "type": "post",
      "id": 41,
      "title": "몬스테라 키우기 팁",
      "content": "몬스테라를 키우면서 알게 된 유용한 팁들을 공유합니다.",
      "createdAt": "2025-08-28T21:01:07.164Z",
      "likesCount": 0,
      "commentsCount": 0
    },
    {
      "type": "post",
      "id": 40,
      "title": "몬스테라 키우기 팁",
      "content": "몬스테라를 키우면서 알게 된 유용한 팁들을 공유합니다.",
      "createdAt": "2025-08-28T21:01:06.745Z",
      "likesCount": 0,
      "commentsCount": 0
    },
    {
      "type": "post",
      "id": 39,
      "title": "몬스테라 키우기 팁",
      "content": "몬스테라를 키우면서 알게 된 유용한 팁들을 공유합니다.",
      "createdAt": "2025-08-28T21:01:06.256Z",
      "likesCount": 0,
      "commentsCount": 0
    },
    {
      "type": "post",
      "id": 38,
      "title": "몬스테라 키우기 팁",
      "content": "몬스테라를 키우면서 알게 된 유용한 팁들을 공유합니다.",
      "createdAt": "2025-08-28T21:01:05.618Z",
      "likesCount": 0,
      "commentsCount": 0
    },
    {
      "type": "post",
      "id": 37,
      "title": "몬스테라 키우기 팁",
      "content": "몬스테라를 키우면서 알게 된 유용한 팁들을 공유합니다.",
      "createdAt": "2025-08-28T21:00:59.723Z",
      "likesCount": 0,
      "commentsCount": 0
    },
    {
      "type": "post",
      "id": 36,
      "title": "몬스테라 키우기 팁",
      "content": "몬스테라를 키우면서 알게 된 유용한 팁들을 공유합니다.",
      "createdAt": "2025-08-28T21:00:59.000Z",
      "likesCount": 0,
      "commentsCount": 0
    },
    {
      "type": "post",
      "id": 35,
      "title": "몬스테라 키우기 팁",
      "content": "몬스테라를 키우면서 알게 된 유용한 팁들을 공유합니다.",
      "createdAt": "2025-08-28T21:00:58.512Z",
      "likesCount": 0,
      "commentsCount": 0
    },
    {
      "type": "post",
      "id": 34,
      "title": "몬스테라 키우기 팁",
      "content": "몬스테라를 키우면서 알게 된 유용한 팁들을 공유합니다.",
      "createdAt": "2025-08-28T21:00:58.050Z",
      "likesCount": 0,
      "commentsCount": 0
    },
    {
      "type": "post",
      "id": 33,
      "title": "몬스테라 키우기 팁",
      "content": "몬스테라를 키우면서 알게 된 유용한 팁들을 공유합니다.",
      "createdAt": "2025-08-28T21:00:57.585Z",
      "likesCount": 0,
      "commentsCount": 0
    }
  ],
  "total": 68,
  "page": 1,
  "limit": 10,
  "totalPages": 7
}
PATCH /users/me/name                      # 이름 변경
req:
{
  "name": "김철수"
}
Code	Description	Links
200	- 이름 변경 성공

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "id": 1,
  "name": "김민준",
  "email": "minjun@example.com",
  "profile_img": "https://s3.amazonaws.com/bucket/profile.jpg",
  "createdAt": "2024-01-01T00:00:00.000Z",
  "plantCount": 5,
  "diaryCount": 23,
  "postCount": 12,
  "friendCount": 8
}
No links
400	- 잘못된 요청 데이터
PATCH /users/me/profile-image             # 프로필 사진 변경
req:
{
  "profile_img": "https://s3.amazonaws.com/bucket/new-profile.jpg"
}
res:
{
  "id": 1,
  "name": "김민준",
  "email": "minjun@example.com",
  "profile_img": "https://s3.amazonaws.com/bucket/profile.jpg",
  "createdAt": "2024-01-01T00:00:00.000Z",
  "plantCount": 5,
  "diaryCount": 23,
  "postCount": 12,
  "friendCount": 8
}
DELETE /users/me/account                  # 회원탈퇴
```

## 🖼️ Image
```http
POST /image/upload/single?folder=plants                 # 단일 이미지 업로드
req:
formdata - key: file / body: image file data
res:
{
  "imageUrl": "https://s3.amazonaws.com/bucket/plants/uuid-filename.jpg"
}

POST /image/upload/multiple               # 다중 이미지 업로드 (최대 10개)
DELETE /image/delete                      # 이미지 삭제
```

---

필요하다면 각 API의 요청/응답 예시나 파라미터 설명도 추가해드릴 수 있어요. 어떤 방식으로 확장하고 싶으신가요?